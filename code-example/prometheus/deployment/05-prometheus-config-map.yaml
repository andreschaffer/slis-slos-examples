apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prometheus
  name: prometheus-config-map
data:
  prometheus.yaml: |
    global:
      scrape_interval: 10s
      evaluation_interval: 10s

    scrape_configs:
    - job_name: 'prometheus-scraper'

      kubernetes_sd_configs:
      - role: endpoints

      scheme: http
      metrics_path: /metrics

      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: true;admin
      - separator: ;
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: $1
        action: labelmap

    rule_files:
    - "http_response.rules.yaml"
    - "sli.rules.yaml"
    - "slo.rules.yaml"
    - "slo_alert.rules.yaml"

  http_response.rules.yaml: |
    groups:
    - name: http_responses
      rules:
        - record: task:http_response_error_count
          expr: http_requests_total{code=~"5[0-9]{2}"}

        - record: task:http_response_success_count
          expr: http_requests_total{code!~"5[0-9]{2}"}

        - record: task:http_response_total_count
          expr: http_requests_total{code=~"[0-9]{3}"}

  sli.rules.yaml: |
    groups:
      - name: slis
        rules:
          - record: job:sli_availability:rate5m
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[5m])) / sum by (job,app,handler) (rate(task:http_response_total_count[5m]))) * 100

          - record: job:sli_availability:rate10m
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[10m])) / sum by (job,app,handler) (rate(task:http_response_total_count[10m]))) * 100

          - record: job:sli_availability:rate30m
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[30m])) / sum by (job,app,handler) (rate(task:http_response_total_count[30m]))) * 100

          - record: job:sli_availability:rate1h
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[1h])) / sum by (job,app,handler) (rate(task:http_response_total_count[1h]))) * 100

          - record: job:sli_availability:rate2h
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[2h])) / sum by (job,app,handler) (rate(task:http_response_total_count[2h]))) * 100

          - record: job:sli_availability:rate6h
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[6h])) / sum by (job,app,handler) (rate(task:http_response_total_count[6h]))) * 100

          - record: job:sli_availability:rate24h
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[24h])) / sum by (job,app,handler) (rate(task:http_response_total_count[24h]))) * 100

          - record: job:sli_availability:rate3d
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[3d])) / sum by (job,app,handler) (rate(task:http_response_total_count[3d]))) * 100

          - record: job:sli_availability:rate28d
            expr: (sum by (job,app,handler) (rate(task:http_response_success_count[28d])) / sum by (job,app,handler) (rate(task:http_response_total_count[28d]))) * 100

  slo.rules.yaml: |
    groups:
      - name: slos
        rules:
          - record: job:slo_availability:actual_error_rate28d
            expr: 100 - (job:sli_availability:rate28d)

          - record: job:slo_availability:remaining_error_budget_slo95_28d
            expr: 1 - (job:slo_availability:actual_error_rate28d / 5)

          - record: job:slo_availability:remaining_error_budget_slo99_28d
            expr: 1 - (job:slo_availability:actual_error_rate28d / 1)

  slo_alert.rules.yaml: |
    groups:
      - name: slo_alerts
        rules:
          - alert: slo_page
            expr: |
              ((100-job:sli_availability:rate1h) > (14.4*0.05*100) and (100-job:sli_availability:rate5m) > (14.4*0.05*100))
              or
              ((100-job:sli_availability:rate6h) > (6*0.05*100) and (100-job:sli_availability:rate30m) > (6*0.05*100))
            labels:
              severity: page

          - alert: slo_ticket
            expr: |
              ((100-job:sli_availability:rate24h) > (3*0.05*100) and (100-job:sli_availability:rate2h) > (3*0.05*100))
              or
              ((100-job:sli_availability:rate3d) > (0.05*100) and (100-job:sli_availability:rate6h) > (0.05*100))
            labels:
              severity: ticket